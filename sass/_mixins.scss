// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}



%clearfix {
    *zoom: 1;
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @-o-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}

@mixin centerer($horizontal: true, $vertical: true) {
    position: absolute;
    @if ($horizontal and $vertical) {
        top: -2%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    @else if ($horizontal) {
        left: 50%;
        transform: translate(-50%, 0);
    }
    @else if ($vertical) {
        top: 50%;
        transform: translate(0, -50%);
    }
}

@mixin triangle($width, $dir, $color) {
    @if $dir==up {
        width: 0px;
        height: 0px;
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-bottom: $width/2 solid $color;
    }
    @else if $dir==down {
        width: 0px;
        height: 0px;
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-top: $width/2 solid $color;
    }
    @else if $dir==right {
        width: 0px;
        height: 0px;
        border-top: $width/2 solid transparent;
        border-bottom: $width/2 solid transparent;
        border-left: $width/2 solid $color;
    }
    @else if $dir==left {
        width: 0px;
        height: 0px;
        border-top: $width/2 solid transparent;
        border-bottom: $width/2 solid transparent;
        border-right: $width/2 solid $color;
    }
}


@mixin grid($numPerRow, $margin) {
    width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);
    &:nth-child(n) {
        margin-bottom: $margin;
        margin-right: $margin;
        float: left;
    }
    &:nth-child(#{$numPerRow}n) {
        margin-right: 0;
    }
}